import com.hi.dhl.plugin.Dependencies

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id "kotlin-parcelize"
}

android {
    namespace 'com.futuretech.common'
    compileSdk 32

    defaultConfig {
        minSdk 23
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.databinding:viewbinding:4.2.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation Dependencies.appcompat

    //compose
    api Dependencies.core_ktx
    api Dependencies.Lifecycle.runtime
    api Dependencies.Compose.activity_compose
    api Dependencies.Compose.ui
    api Dependencies.Compose.ui_tooling
    api Dependencies.Compose.material
    api Dependencies.Compose.navigation_compose

    //paging分页库
    api(Dependencies.Page.compose)
    api(Dependencies.Page.core)

    //mmkv
    api(Dependencies.mmkv)

    //navigation
    api(Dependencies.Compose.navigation_compose)
    api(Dependencies.Compose.hilt_navigation_compose)
    api "androidx.navigation:navigation-fragment-ktx:$nav_version"
    api "androidx.navigation:navigation-ui-ktx:$nav_version"

    //lifecycle
    api(Dependencies.Lifecycle.livedata)
    api(Dependencies.Lifecycle.runtime)
    api(Dependencies.Lifecycle.viewmodel)
    api(Dependencies.Lifecycle.savedstate)

    //permission
    api(Dependencies.xxpermission)

    //http request
    api(Dependencies.Retrofit.runtime)
    api(Dependencies.Retrofit.gson_convert)
    api(Dependencies.Retrofit.gson)

    //gson
    api(Dependencies.gson)

    // accompanist
    api(Dependencies.Accompanist.coil)
    api(Dependencies.Accompanist.pager)
    api(Dependencies.Accompanist.pager_indicator)
    api(Dependencies.Accompanist.insets)
    api(Dependencies.Accompanist.systemuicontroller)
    api(Dependencies.Accompanist.swiperefresh)
    api(Dependencies.Accompanist.flowlayout)
    api(Dependencies.Accompanist.placeholder)
    api(Dependencies.Accompanist.permission)

    //material
    api(Dependencies.material)

    //datastore
    api(Dependencies.dataStore)

    //constraintlayout
    api(Dependencies.constraintlayout)
    api(Dependencies.constraintlayout_compose)

    //Accompanist
    api(Dependencies.Accompanist.navigation_animation)
    api(Dependencies.Accompanist.webview)

    //coil
    api(Dependencies.coil)

    // 状态栏 https://github.com/gyf-dev/ImmersionBar
    api "com.gyf.immersionbar:immersionbar:${immersionbar_version}"
    api "com.gyf.immersionbar:immersionbar-components:${immersionbar_version}"
    api "com.gyf.immersionbar:immersionbar-ktx:${immersionbar_version}"

    // Lottie
    api "com.airbnb.android:lottie:5.1.1"
    //Toast
    api 'com.github.getActivity:ToastUtils:10.3'
    // LuBan 压缩
    api 'com.github.forJrking:KLuban:1.1.0'
    // Log
    api "com.github.zhaokaiqiang.klog:library:1.6.0"
    //RxHttp
    api "com.github.liujingxing.rxhttp:rxhttp:2.8.7"
    kapt "com.github.liujingxing.rxhttp:rxhttp-compiler:2.8.7"
    // 防止 LiveData 数据倒灌
    api "com.kunminx.arch:unpeek-livedata:7.6.0"
}